# Zeebe endpoint
######################
# in cloud:
#camunda.client.mode=saas
#camunda.client.auth.client-id=XXX
#camunda.client.auth.client-secret=XXX
#camunda.client.cluster-id=XXX
#camunda.client.region=XXX

# or local
# camunda.client.mode=simple

# or selfmanaged
#camunda.client.mode=selfmanaged
#camunda.client.zeebe.base-url=http://custom.domain
#camunda.client.auth.issuer=http://custom.domain/auth/realms/camunda-platform/protocol/openid-connect/token
#camunda.client.zeebe.grpc-address=https://custom.domain
#camunda.client.zeebe.rest-address=https://custom.domain/rest
#camunda.client.zeebe.prefer-rest-over-grpc=false

#camunda.client.auth.client-id=XXX
#camunda.client.auth.client-secret=XXX
#camunda.client.identity.base-url=https://custom.domain/identity

camunda.client.mode=self-managed
camunda.client.zeebe.base-url=http://localhost:26500 
camunda.client.zeebe.grpc-address=http://localhost:26500
#camunda.client.zeebe.rest-address=http://camunda-zeebe-gateway:8080
camunda.client.zeebe.prefer-rest-over-grpc=false

server.port=8088
management.endpoints.web.exposure.include=*
management.metrics.export.prometheus.enabled=true

# Main benchmark configurations
######################
benchmark.startProcesses=false
benchmark.startPiPerSecond=1
benchmark.taskCompletionDelay=150
benchmark.bpmnProcessId=benchmark_10_jobtypes
# Set this to false if you only want to start processes but don't want any workers
benchmark.startWorkers=true
benchmark.jobType=benchmark-task
# Create multiple workers to respond to multiple job types
# By default, only one worker is created and will listen for job type defined above.
# If the value is set to `2`, for example, 2 workers are created: `benchmark-task-1` and `benchmark-task-2`
benchmark.multipleJobTypes=10
# 5 minutes warmup:  5*60*1000
benchmark.warmupPhaseDurationMillis=300000
# can be "none" or "backpressure" or "jobRatio"
benchmark.startRateAdjustmentStrategy=none

benchmark.payloadPath=classpath:bpmn/event_payload.json

benchmark.autoDeployProcess=true
benchmark.bpmnResource=classpath:bpmn/typical_process_10_jobtypes.bpmn

benchmark.starterId=benchmarkStarter1

# BPMN Message Scenario
########################
#benchmark.bpmnResource=classpath:bpmn/msg_process.bpmn
#benchmark.messageScenario=classpath:bpmn/sample-msg-scenario.json
#benchmark.messagesTtl=60
#benchmark.messagesScenariosPerSecond=10
#benchmark.delayBetweenMessages=10000
#benchmark.messagesLoadDuration=1000

# More specific configs you better leave as is unless you know what you are doing :-)
######################
camunda.client.zeebe.defaults.max-jobs-active=2000
camunda.client.zeebe.execution-threads=100
camunda.client.zeebe.defaults.stream-enabled=true
# camunda.client.zeebe.defaults.request-timeout=30s

benchmark.maxBackpressurePercentage=10.0
benchmark.startPiReduceFactor=0.1
benchmark.startPiIncreaseFactor=0.4

async.corePoolSize=5
async.maxPoolSize=100
async.queueCapacity=1000

scheduler.poolSize=10

# when 0, use the default Exponential Backoff Supplier. Otherwise, specify fixed number of millis backoff.
benchmark.fixedBackOffDelay=0
