name: Build, test and deploy artifacts with Maven

on:
  push:
    branches: [main]
  release:
    types: [published]
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
      - name: Set up Java environment
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin
          cache: maven
          gpg-private-key: ${{ secrets.MAVEN_CENTRAL_GPG_SIGNING_KEY_SEC }}
          gpg-passphrase: MAVEN_CENTRAL_GPG_PASSPHRASE
      - name: Build with Maven
        id: build
        run: mvn -B -U -Dsurefire.rerunFailingTestsCount=5 clean install
      - name: Archive Test Results on Failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: test-results
          path: target/surefire-reports/
          retention-days: 7
      - name: Publish Unit Test Results
        id: publish
        uses: EnricoMi/publish-unit-test-result-action@v2.3.0
        if: failure()
        with:
          junit_files: target/surefire-reports/*.xml
# Skip deployment to Maven Central until this issue is fixed:
# https://github.com/camunda-community-hub/camunda-8-benchmark/issues/149
#      - name: Deploy SNAPSHOT / Release
#        uses: camunda-community-hub/community-action-maven-release@v1
#        with:
#          release-version: ${{ github.event.release.tag_name }}
#          release-profile: community-action-maven-release
#          nexus-usr: ${{ secrets.NEXUS_USR }}
#          nexus-psw: ${{ secrets.NEXUS_PSW }}
#          maven-usr: ${{ secrets.MAVEN_CENTRAL_DEPLOYMENT_USR }}
#          maven-psw: ${{ secrets.MAVEN_CENTRAL_DEPLOYMENT_PSW }}
#          maven-gpg-passphrase: ${{ secrets.MAVEN_CENTRAL_GPG_SIGNING_KEY_PASSPHRASE }}
#          github-token: ${{ secrets.GITHUB_TOKEN }}
#        id: release
      - if: github.event.release
        name: Attach artifacts to GitHub Release (Release only)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ steps.release.outputs.artifacts_archive_path }}
          asset_name: ${{ steps.release.outputs.artifacts_archive_path }}
          asset_content_type: application/zip
  push_to_registry:
    needs: publish
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USR }}
          password: ${{ secrets.DOCKERHUB_PSW }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
        with:
          images: camundacommunityhub/camunda-8-benchmark
      - name: Build and push Docker image
        uses: docker/build-push-action@ccc2b40e9ea6518f9252a22a990f8e868370f62e
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
